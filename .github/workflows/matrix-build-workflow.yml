on:
  workflow_call:
    inputs:
      netSdkVersion:
        description: The primary .NET SDK version required for the build process, as per the syntax required by the 'setup-dotnet' action.
        required: true
        type: string
        default: '6.0.x'
      additionalNetSdkVersion:
        description: An additional .NET SDK version required for the build process, as per the syntax required by the 'setup-dotnet' action.
        required: false
        type: string
      pythonVersion:
        description: Specify an additional Python version required for the build process
        required: false
        type: string
      additionalCachePaths:
        description: Custom paths that need to be included in the multi-stage pipeline caching.
        required: false
        default: ''
        type: string
      configuration:
        description: The target build configuration.  
        required: false
        default: 'Release'
        type: string
      compilePhaseEnv:
        description: A JSON object representing the environment variables required when running the 'compile' stage of this workflow.
        required: false
        type: string
      testPhaseEnv:
        description: A JSON object representing the environment variables required when running the 'test' stage of this workflow.
        required: false
        type: string
      testArtifactName:
        description: If set, during the test phase, uploads a GitHub artifact with the provided name (path must be specified in `artifactPath`)
        required: false
        type: string  
      testArtifactPath:
        description: If set, during the test phase, uploads a GitHub artifact with the provided path (name must be specified in `artifactName`). The path can be a file, directory or wildcard pattern; multiple paths can be specified using newline demiliter.
        required: false
        type: string  
      packagePhaseEnv:
        description: A JSON object representing the environment variables required when running the 'package' stage of this workflow.
        required: false
        type: string
      publishPhaseEnv:
        description: A JSON object representing the environment variables required when running the 'publish' stage of this workflow.
        required: false
        type: string
      publishArtifactName:
        description: If set, during the publish phase, uploads a GitHub artifact with the provided name (path must be specified in `artifactPath`)
        required: false
        type: string  
      publishArtifactPath:
        description: If set, during the publish phase, uploads a GitHub artifact with the provided path (name must be specified in `artifactName`). The path can be a file, directory or wildcard pattern; multiple paths can be specified using newline demiliter.
        required: false
        type: string    
      forcePublish:
        description: When true, the Publish stage will be run regardless of the current branch or tag.
        required: false
        default: false
        type: boolean
      skipCleanup:
        description: When true the pipeline clean-up stage will not be run. For example, the cache used between pipeline stages will be retained.
        required: false
        default: false
        type: boolean
      buildScriptPath:
          description: The path to the build script to run.
          required: false
          default: ./build.ps1
          type: string

    secrets:
      compilePhaseAzureCredentials:
        required: false
      compilePhaseSecrets:
        description: A YAML string representing a dictionary of secrets required when running the 'compile' stage of this workflow.
        required: false
      testPhaseAzureCredentials:
        required: false
      testPhaseSecrets:
        description: A YAML string representing a dictionary of secrets required when running the 'test' stage of this workflow.
        required: false
      packagePhaseAzureCredentials:
        required: false
      packagePhaseSecrets:
        description: A YAML string representing a dictionary of secrets required when running the 'package' stage of this workflow.
        required: false
      publishPhaseAzureCredentials:
        required: false
      publishPhaseSecrets:
        description: A YAML string representing a dictionary of secrets required when running the 'publish' stage of this workflow.
        required: false

env:
  CODE_COVERAGE_RESULTS_DIR: ${{ vars.BUILD_CODE_COVERAGE_RESULTS_DIR || '_codeCoverage' }}
  CODE_COVERAGE_RESULTS_FILE: ${{ vars.BUILD_CODE_COVERAGE_RESULTS_FILE || 'Cobertura.xml' }}
  CODE_COVERAGE_LOWER_THRESHOLD: ${{ vars.BUILD_CODE_COVERAGE_LOWER_THRESHOLD || 60 }}
  CODE_COVERAGE_UPPER_THRESHOLD: ${{ vars.BUILD_CODE_COVERAGE_UPPER_THRESHOLD || 80 }}

jobs:
  build:
    name: Run Build
    strategy:
      matrix:
        include:
          - netfx: '8.0.x'
            os: ubuntu-latest
          - netfx: '4.8.x'
            os: windows-latest
    runs-on: ${{ matrix.os }}
    outputs:
      semver: ${{ steps.run_compile.outputs.semver }}
      major: ${{ steps.run_compile.outputs.major }}
      majorMinor: ${{ steps.run_compile.outputs.majorMinor }}
      preReleaseTag: ${{ steps.run_compile.outputs.preReleaseTag }}

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
      with:
        fetch-depth: 0
    - uses: endjin/Endjin.RecommendedPractices.GitHubActions/actions/set-env-vars-and-secrets@main
      with: 
        environmentVariablesYamlBase64: ${{ inputs.compilePhaseEnv}}
        secretsYamlBase64: ${{ secrets.compilePhaseSecrets}}
    - name: Debug Variables
      if: env.ACTIONS_RUNNER_DEBUG == 'true'
      run: |
        gci env:/ | fl | out-string | Write-Host
      shell: pwsh
    - name: Check if compilePhaseAzureCredentials secret is set
      id: compilePhaseAzureCredentials_secret_check
      shell: bash
      run: |
        if [ "${{ secrets.compilePhaseAzureCredentials }}" != '' ]; then
          echo "available=true" >> $GITHUB_OUTPUT;
        else
          echo "available=false" >> $GITHUB_OUTPUT;
        fi
    - name: Azure CLI login
      if: ${{ steps.compilePhaseAzureCredentials_secret_check.outputs.available == 'true' }}
      uses: azure/login@8c334a195cbb38e46038007b304988d888bf676a    # v2.0.0
      with:
        creds: ${{ secrets.compilePhaseAzureCredentials }}
        enable-AzPSSession: true
    - uses: endjin/Endjin.RecommendedPractices.GitHubActions/actions/run-scripted-build@main
      id: run_compile
      with:
        displayName: Compile & Analyse
        buildScriptPath: ${{ inputs.buildScriptPath }}
        netSdkVersion: ${{ matrix.netfx }}
        additionalNetSdkVersion: ${{ inputs.additionalNetSdkVersion }}
        pythonVersion: ${{ inputs.pythonVersion }}
        tasks: 'FullBuild'
        configuration: ${{ inputs.configuration }}
        outputCachePaths: |
          .nuget-packages
          Solutions
          solutions
          ${{ inputs.additionalCachePaths }}
      env:
        BUILDVAR_AnalysisOutputStorageAccountName: ${{ vars.SBOM_OUTPUT_STORAGE_ACCOUNT_NAME}}
        BUILDVAR_AnalysisOutputContainerName: ${{ vars.SBOM_OUTPUT_STORAGE_CONTAINER_NAME}}
        BUILDVAR_AnalysisOutputBlobPath: ${{ vars.SBOM_OUTPUT_STORAGE_BLOB_BASE_PATH }}/src_platform=github/org=${{ github.repository_owner }}/repo=${{ github.event.repository.name }}
        BUILDVAR_PublishCovenantOutputToStorage: true
        BUILDVAR_CovenantMetadata: >
          {
            "git_provider": "github",
            "git_org": "${{ github.repository_owner }}",
            "git_repo": "${{ github.event.repository.name }}",
            "git_branch": "${{ github.ref_name }}", 
            "git_sha": "${{ github.sha }}"
          }

  
